services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: password_manager_database
      POSTGRES_USER: ps_user
      POSTGRES_PASSWORD: ps_password

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data

  web:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=True
      - DB_NAME=password_manager_database
      - DB_USER=ps_user
      - DB_PASSWORD=ps_password
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    command: celery -A config worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - web
    environment:
      - DEBUG=True
      - DB_NAME=password_manager_database
      - DB_USER=ps_user
      - DB_PASSWORD=ps_password
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery-beat:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    command: celery -A config beat --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=True
      - DB_NAME=password_manager_database
      - DB_USER=ps_user
      - DB_PASSWORD=ps_password
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

volumes:
  postgres_data:
  redis_data:
